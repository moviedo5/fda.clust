% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fmeanshift.R
\name{fmeanshift}
\alias{fmeanshift}
\title{Functional Mean Shift Clustering}
\usage{
fmeanshift(
  fdataobj,
  h = -0.15,
  metric = metric.lp,
  par.metric = list(lp = 2),
  derr = 0.1
)
}
\arguments{
\item{fdataobj}{An object of class \code{fdata} containing the functional data to be clustered.}

\item{h}{The bandwidth parameter. If \code{h < 0}, the bandwidth is estimated using 
the \code{h.default} function with \code{prob = abs(h)}. Defaults to \code{h = -0.15}.}

\item{metric}{A function to compute the distance between elements of \code{fdataobj}. 
Defaults to \code{metric.lp}.}

\item{par.metric}{A list of additional parameters to be passed to the \code{metric} 
function. By default, \code{list(lp = 2)} to compute the L2 distance.}

\item{derr}{A convergence tolerance parameter used to determine when the mean shift
has converged. Defaults to \code{derr = 0.1}.}
}
\value{
A list with the following components:
\item{cluster}{An integer vector indicating the cluster assignment for each 
observation in \code{fdataobj}.}
\item{centers}{An \code{fdata} object representing the centers of the clusters.}
}
\description{
This function applies the mean shift clustering algorithm to a functional data
object of class \code{fdata}.  It uses a kernel-based approach to iteratively shift points 
towards high-density regions.
}
\details{
The \code{fmeanshift} algorithm iteratively shifts each observation towards the mode 
of its neighborhood, defined using a kernel 
with bandwidth \code{h}. The procedure continues until the shift distance is smaller 
than a convergence threshold controlled by \code{derr}.

The distance between functional data is computed using the distance function \code{metric}, 
which defaults to the L2 distance provided by \code{metric.lp} 
from the \code{fda.usc} package. The bandwidth \code{h} controls the size of the neighborhood c
onsidered for the shift.
}
\examples{
\dontrun{
set.seed(8:1)
t <- seq(0, 2 * pi, length.out = 101)
res <- rprocKclust(t, n = c(40, 40), process = c("cos_sin", "sin"),
                   c = c(-1, 2), k = c(NA, NA), s = c(0.3, 0.3))
# Run mean shift clustering with automatic bandwidth selection
result <- fmeanshift(res$X)
# Display cluster assignments and centers
table(result$cluster,res$groups)
plot(result$centers)
plot(res$X, col = result$cluster, main = "functional meanshift")
}
}
\seealso{
See \link[fda.usc:metric.lp]{metric.lp} for distance calculations.
}
\keyword{cluster}
