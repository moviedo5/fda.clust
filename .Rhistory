lines(res$X.hat, lwd=2, col=res$color)
res$color
res$X.hat
rproc2mu
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
tools::checkRd("man/rproc2mu.Rd")
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
tools::checkRd("man/rproc2mu.Rd")
pkgload::dev_help('cell_cycle')
load("C:/Users/Manuel Oviedo/github/fda.clust/data/growth_ldata.rda")
ls()
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
#  setwd("C:/Users/Manuel Oviedo/github")
build_manual(pkg = "fda.clust", path = NULL)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
unlink("NAMESPACE")
unlink("man", recursive = TRUE)
# Genera la documentaci√≥n y NAMESPACE de nuevo
devtools::document()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
#  setwd("C:/Users/Manuel Oviedo/github")
build_manual(pkg = "fda.clust", path = NULL)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
build_manual(pkg = "fda.clust", path = NULL)
getwd()
setwd("C:/Users/Manuel Oviedo/github")
build_manual(pkg = "fda.clust", path = NULL)
library(devtools)
setwd("C:/Users/Manuel Oviedo/github")
build_manual(pkg = "fda.clust", path = NULL)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
setwd("C:/Users/Manuel Oviedo/github/fda.clust")
setwd("C:/Users/Manuel Oviedo/github")
build_manual(pkg = "fda.clust", path = NULL)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
getwd()
#pkgbuild::compile_dll()
roxygenize()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
library(fda.clust)
# Load the example dataset ECG200
data(ECG200)
# Perform k-means clustering on functional data with 2 clusters
set.seed(123)
result <- fkmeans(ECG200$x, ncl = 2)
# Plot the functional data with cluster assignments
plot(ECG200$x, col = result$cluster, main = "ECG200 Clustered with fkmeans")
vignette("Introduction", package = "fda.clust")
vignette("Simulations", package = "fda.clust")
vignette("vignettes/Simulations", package = "fda.clust")
vignette("vignettes/Simulations.Rd", package = "fda.clust")
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
devtools::document()
devtools::document()
devtools::document()
devtools::build_vignettes()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
devtools::document()
devtools::build_vignettes()
devtools::document()
devtools::build_vignettes()
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
unlink(file.path(tempdir(), "lastMiKTeXException"))
unlink(tempdir(), recursive = TRUE)
getwd()
#pkgbuild::compile_dll()
roxygenize()
getwd()
#pkgbuild::compile_dll()
roxygenize()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(pkgdown)
# usethis::use_pkgdown()
# Build website:
#pkgdown::build_site()
build_site(new_process = TRUE)
devtools::build_vignettes()
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
devtools::build_vignettes()
list.files("inst/doc")
setwd("C:/Users/Manuel Oviedo/github/fda.clust")
unlink("inst/doc", recursive = TRUE)
devtools::build_vignettes()
unlink("inst/doc", recursive = TRUE)
devtools::build_vignettes()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
devtools::build_vignettes()
unlink("inst/doc", recursive = TRUE)
devtools::build_vignettes()
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
# Rebuild vignettes
devtools::build_vignettes()
# Build pkgdown site
pkgdown::build_site()
# Commit and push changes to GitHub
system("git add .")
system("git commit -m 'Build pkgdown site'")
system("git push origin main")
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
library(devtools)
devtools::build()
devtools::check(manual = TRUE)  # problemas con miktex
devtools::install()
build_site(new_process = TRUE)
devtools::build_vignettes()
devtools::document()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
devtools::build_vignettes()
#unlink("inst/doc", recursive = TRUE)
#devtools::build_vignettes()
library(devtools)
devtools::build()
devtools::install()
devtools::check(manual = TRUE)  # problemas con miktex
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
# Step 1: Update documentation and vignettes
devtools::document()
devtools::build_vignettes()
# Step 2: Build pkgdown site
pkgdown::build_site()
# Step 3: Rebuild package
devtools::build()
# Step 4: Check package
devtools::check()
devtools::check(manual = TRUE)
devtools::install()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
# 1. Inicializar la web del paquete
library(pkgdown)
pkgdown::init_site()
# 2. Construir la web
pkgdown::build_site()
# Step 1: Update documentation and vignettes
devtools::document()
devtools::build_vignettes()
# Step 2: Build pkgdown site
pkgdown::build_site()
# Step 3: Rebuild package
devtools::build()
# Step 4: Check package
devtools::check()
# devtools::check(manual = TRUE)
devtools::install()
library(roxygen2)
# setwd("C:/Users/Manuel Oviedo/github/fda.clust")
getwd()
#pkgbuild::compile_dll()
roxygenize()
devtools::document()
library(tools)
tools::checkRd("man/fdbscan.Rd")
tools::checkRd("man/fmeanshift.Rd")
tools::checkRd("man/fhclust.Rd")
tools::checkRd("man/fkmeans.Rd")
#tools::checkRd("man/rproc2mu.Rd")
#tools::checkRd("man/rproc2clust.Rd")
tools::checkRd("man/fclust.measures.Rd")
tools::checkRd("man/ECG5000.Rd")
tools::checkRd("man/ECG200.Rd")
tools::checkRd("man/growth_ldata.Rd")
# 1. Inicializar la web del paquete
library(pkgdown)
pkgdown::init_site()
# 2. Construir la web
pkgdown::build_site()
